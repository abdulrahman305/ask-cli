namespace com.dialogEight

import com.amazon.alexa.ask.conversations.*
import com.amazon.alexa.schema.*
import com.amazon.ask.types.builtins.AMAZON.*
import prompts.*
import slotTypes.*

// API Action

action colorFruitNameResponseType colorFruitName(Color colorName, Food fruitName = nothing)

action fruitNameResultType fruitNameAPI(Food fruitName)

// UtteraceSets 

InvokeEvent = utterances(
  samples = [
    "i want to buy a fruit"
  ]
)

informColorEvent = utterances<colorNameType>(
  samples = [
    "{colorName}",
    "color is {colorName}",
    "color {colorName}"
  ]
)

affirmEvent = utterances(
  samples = [
    "do it"
  ]
)

// Type

type colorNameType {
  Color colorName
}

type colorFruitNameResponseType {
  Food fruitName
  Color colorName
}

type fruitNameResultType {
  Food fruitName
  NUMBER price
}

type responsePayloadType {
  fruitNameResultType fruitNameResult
}

dialog Nothing dialogEight() {
  sample {
    expect(act = Invoke, event = InvokeEvent)
    response( response = request_colorName_apla, 
      act = Request {arguments = [colorFruitName.arguments.colorName]})
    colorEvent = expect(act = Inform, event = informColorEvent)
    response(response = confirm_colorName_apla, act = ConfirmArgs {arguments = [colorFruitName.arguments.colorName]}, 
      payload = colorNameType {  colorName = colorEvent.colorName})
    expect(act = Affirm, event = affirmEvent)
    apiResponseOne = colorFruitName(colorName = colorEvent.colorName)
    apiResponseTwo = fruitNameAPI(fruitName = apiResponseOne.fruitName)
    response(response = success_fruitNameAPI_apla, act = Notify {  actionName = fruitNameAPI}, 
      payload = responsePayloadType {  fruitNameResult = apiResponseTwo})
  }
}
